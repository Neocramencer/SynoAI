@using SynoAI.Models

<!DOCTYPE html>
<html lang="en">
    <head>
        <title>SynoAI</title>
        <style>

            .graph {background-color:#eee; width:648px; height: 150px; padding:5px; font-size:8px;}

            .axis-y {float:left;width:21px; height:125px; margin:0; text-align: right; padding-right:2px; border-right: 1px solid #000;}
            .value-y {height:25px; margin:0; text-align:right; padding-right:2px;}

            .predictions {width: 11px; display: inline-block; position: relative; background-color: blue; vertical-align: baseline;}
            .objects {width: 11px; display: inline-block; position: relative; background-color: lightblue; vertical-align: baseline;}

            .axis-x {clear:both;width:648px; height:21px; margin:0; padding-top:2px; border-top: 1px solid #000;}  
            .value-x {display:inline-block; width:20px; margin:0; text-align:center; padding:2px; }


        </style>
    </head>
    <body>
        <h2>SynoAI Report</h2>
        <h4>Data updated at @DateTime.Now</h4>
        <hr>
        @foreach (Camera camera in SynoAI.Config.Cameras)
        {
            SynoAI.Controllers.HomeController.GetGraphData(camera.Name);
            <p>
                Camera: <b>@camera.Name</b><br />
                Threshold: <b>@camera.Threshold.ToString()</b>% certainity<br />
                Objects: <b> @SynoAI.Controllers.HomeController.GetTypes(camera)</b><br />
                Snapshots: <b> @SynoAI.Controllers.HomeController.cameraFiles.ToString()</b> images, distributed inside <b>@SynoAI.Controllers.HomeController.cameraHours.ToString()</b> Hours.<br />
                Storage: <b>@SynoAI.Controllers.HomeController.NiceByteSize()</b>
            </p>
            <h4>Valid predictions (Shows up to 24 hours of activity)</h4>
            <div class="graph">
                <div class="axis-y">
                    @for (int y = 1; y <= 5; y++) 
                    {
                        <div class="value-y">@SynoAI.Controllers.HomeController.yStepping(@SynoAI.Controllers.HomeController.yMax, y, 5)</div>
                    }                
                </div>

                @foreach (SynoAI.Models.GraphData graphData in SynoAI.Controllers.HomeController.graphData)
                {
                    <div class="predictions" title="@graphData.Predictions Images @@ @graphData.Hour Hs." style="height:@SynoAI.Controllers.HomeController.GraphBar(graphData.Predictions,125).ToString()px;" ></div>
                    <div class="objects" title="@graphData.Objects Objects @@ @graphData.Hour Hs." style="height:@SynoAI.Controllers.HomeController.GraphBar(graphData.Objects,125).ToString()px;" ></div>
                }

                <div class="axis-x">
                    <div class="value-x"></div>
                    @foreach (SynoAI.Models.GraphData graphData in SynoAI.Controllers.HomeController.graphData)
                    {
                        <div class="value-x">@graphData.Hour.ToString()</div>
                    }
                </div>

            </div>
        }
    </body>
</html>
